syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_create_account.proto";
import "rpc_update_account.proto";
import "rpc_login_account.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "simpletodo/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Simple Todo Api";
    version: "1.1";
    contact: {
      name: "Todo Api of Go lang implementation";
      url: "https://github.com/MADHURANGA-SKP/API---Simple-Todo";
      email: "pasanmadhuranga@gmail.com";
    };
  };
};

service Simpletodo {
    rpc CreateAccount (CreateAccountRequest) returns (CreateAccountResult) {
        option (google.api.http) = {
            post: "/v1/create_account"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "Use this API to create a new account";
          summary: "Create new account";
        };
    }

    rpc UpdateAccount (UpdateAccountRequest) returns (UpdateAccountResult) {
      option (google.api.http) = {
          patch: "/v1/update_account"
          body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "Use this API to update a exiting account";
        summary: "update account";
      };
  }

    rpc LoginAccount (LoginAccountRequest) returns (LoginAccountResult) {
        option (google.api.http) = {
            post: "/v1/login_account"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "Use this API to log into a account";
          summary: "login account";
        };
    }
}
